{"version":3,"file":"static/js/16.deeed0eb.chunk.js","mappings":"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","sources":["components/Box.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/index.jsx","pages/Login/loginPage.styled.jsx","pages/Login/index.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  shadow,\n  border,\n  typography,\n  background,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  shadow,\n  border,\n  typography,\n  background,\n  position\n);\n","import { Field, Form } from 'formik';\nimport styled from '@emotion/styled';\nimport google from 'images/google.svg';\nimport { theme } from '../Theme';\n\nexport const GoogleButton = styled.a`\n  width: 182px;\n  height: 44px;\n  padding: 12px 16px 12px 42px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  font-weight: ${theme.fontWeights.bold};\n  border-radius: 30px;\n  border: 2px solid ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.s};\n  box-shadow: '0px 4px 10px 0px #fc842d80';\n  transition: ${theme.transition.all};\n  color: ${theme.colors.accent};\n  cursor: pointer;\n  background-image: url(${google});\n  background-color: ${theme.colors.white};\n  background-repeat: no-repeat;\n  background-position: 12px 11px;\n  &:hover,\n  :focus {\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  }\n`;\nexport const FormLogIn = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 76px;\n\n  @media screen and (min-width: 768px) {\n    align-items: start;\n    gap: 60px;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: ${p => p.theme.colors.textFirst};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  width: 280px;\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  outline-color: ${p => p.theme.colors.accent};\n  width: 100%;\n  height: 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 240px;\n  }\n   &:focus,\n  &:hover {\n    outline: none;\n  }\n  &:focus,\n  :hover {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  width: 100%;\n  text-align: justify;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { FormLogIn, Input, Label, ErrorText ,GoogleButton} from './LoginForm.styled';\nimport { logIn } from 'redux/auth/auth-operations';\nimport { ButtonAuth, ButtonLinkAuth } from 'components/Button';\nimport { Link } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ShowPasswordButton } from 'components/Button/ShowPasswordButton';\nimport { useTranslation } from \"react-i18next\";\n\nconst FormError = ({ name }) => {\n    const { t } = useTranslation();\n\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{t(message)}</ErrorText>}\n    />\n  );\n};\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('validationRegisterForm.label2')\n    .required('validationDiaryForm.label4'),\n  password: yup\n    .string()\n    .min(3, 'validationDiaryForm.label3')\n    .required('validationDiaryForm.label4'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const FormLogin = () => {\n  const [showPassword, setShow] = useState(false);\n  const handleClick = () => setShow(!showPassword);\n  const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormLogIn autoComplete=\"off\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            mt=\"55px\"\n            gridGap=\"40px\"\n          >\n            <Label htmlFor=\"email\">\n               {t(\"AuthForm.label_3\")}<Input type=\"email\" name=\"email\"></Input>\n              <FormError name=\"email\" component=\"p\" />\n            </Label>\n            <Label htmlFor=\"password\">\n              {t(\"AuthForm.label_2\")}\n              <Input\n                name=\"password\"\n                type={showPassword ? 'true' : 'password'}\n              ></Input>\n              <FormError name=\"password\" component=\"p\" />\n              <ShowPasswordButton\n                handleClick={handleClick}\n                show={showPassword}\n              />\n            </Label>\n          </Box>\n          <Box\n            display=\"flex\"\n            flexDirection={['column', 'row']}\n            alignItems=\"center\"\n            gridGap={['20px', '32px']}\n          >\n            <ButtonAuth text={t(\"header.buttonLogin\")}></ButtonAuth>\n            <Link to=\"/registration\">\n              <ButtonLinkAuth text={t(\"header.buttonReg\")}></ButtonLinkAuth>\n            </Link>\n             {/* <GoogleButton href={`http://localhost:5001/api/auth/google`}> */}\n              <GoogleButton href={`https://slimmoms-api.onrender.com/api/auth/google`}>\n                {t(\"header.google\")}\n              </GoogleButton>\n          </Box>\n        </FormLogIn>\n      </Formik>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoginPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 40px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    padding-top: 160px;\n  }\n  \n`;\n\nexport const TitleLogIn = styled.h1`\n  color: ${p => p.theme.colors.accent};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n","import { AuthBackground } from 'components/AuthBackground';\nimport Loader from 'components/Loader/Loader';\nimport { FormLogin } from 'components/LoginForm';\nimport { useAuth } from 'hooks/useAuth';\nimport { LoginPage, TitleLogIn } from './loginPage.styled';\nimport { useTranslation } from \"react-i18next\";\n\nconst Login = () => {\n  const { isLoading } = useAuth();\n      const { t } = useTranslation();\n\n  return (\n    <>\n    <AuthBackground/>\n    <LoginPage>\n      <TitleLogIn>{t(\"header.signin\")}</TitleLogIn>\n      <FormLogin />\n      {isLoading && <Loader />}\n      </LoginPage>\n      {/* // </AuthBackground> */}\n      </>\n  );\n};\n\nexport default Login;\n"],"names":["Box","styled","color","space","layout","flexbox","grid","shadow","border","typography","background","position","GoogleButton","theme","google","FormLogIn","Form","Label","p","colors","textFirst","fontSizes","s","fontWeights","bold","Input","Field","accent","ErrorText","FormError","name","t","useTranslation","render","message","schema","yup","shape","email","required","password","min","initialValues","FormLogin","useState","showPassword","setShow","dispatch","useDispatch","onSubmit","resetForm","logIn","validationSchema","autoComplete","display","flexDirection","alignItems","mt","gridGap","htmlFor","type","component","ShowPasswordButton","handleClick","show","Button","text","to","href","LoginPage","TitleLogIn","isLoading","useAuth","AuthBackground","Loader"],"sourceRoot":""}